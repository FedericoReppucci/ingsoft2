FUNCTIONAL REQUIREMENTS

- Non registered person
	
	[G1.0]: Any person is able to register to the service by providing his/her credentials and valid payment info.
	[G1.1]: He/she receives back a password with which he/she is able to access the system.

		[R1.1]: The app is available for any person to download and run on his/her phone
		[R1.2]: From the home page of the app any person can carry out the registration procedure
		[R1.3]: The registration procedure requires a person's credentials and payment info to be carried out
		[R1.4]: The registration procedure uses the external payment service to verify the validity of the provided payment info
		[R1.5]: At the end of the registration procedure the person whose credentials were used is registered in the system 
		[R1.6]: At the end of the registration procedure the person receives an e-mail containing a password which he/she can use to access the system
		[R1.7]: At the end of the registration procedure the person can ask the system to send another mail

	Domain assumptions that ensure the desired outcome:

		[D1.0]: The credentials provided by the person at the moment of his/her registration  are always correct, and always belong to the person carrying out the procedure.
		[D1.2]: The validity check for the payment info delegated to the external payment service is always correct.
		[D2]: A person is always able to receive an e-mail sent by the system after a finite number of tries

	NOTE: this goal is interpreted as: providing one's credentials and some valid payment condition is sufficient and necessary to register to the system

	ADDITIONAL GOALS EMERGED THROUGH SCENARIO ANALYSIS

	[GA1.0]: Any person registered to the system  is able to log in the application.
	[GA1.1]: Only a person registered to the system is able to log in the application 

		[RA1.1]: The app allows any person to log in by providing a valid e-mail and password
		[RA1.2]: The app does not allow any person who does not provide a valid e-mail and password to log in 

	Domain assumption that ensures the desired outcome:

		[DA1]: Only a registered person is able to provide a valid e-mail and password


	[GA2]: Any person registered to the system is able to retrieve his/her password

		[RA2.1]: From the home page of the app the password retrieval procedure can be initiated by any person
		[RA2.2]: If a person provides a valid e-mail address during the password retrieval procedure the system sends an e-mail to that address containing the associated password

	Domain assumption that ensures the desired outcome:	

		[DA2]: If an password is sent by e-mail to a person's address that password is retrieved by the person
		[D2]: A person is always able to receive an e-mail sent by the system after a finite number of tries

	[GA3]: Any person is able to access the PowerEnJoy website

		[RA3]: Access to the PowerEnJoy's website (a static page) is granted upon request by the system (no login required)

	Domain assumption that ensures the desired outcome

		[DA3]: Any person is able to request any webpage (use a browser)

- User
	
	[G2.0]: The user is able to find the location of all available cars within a certain range from their current location.
	[G2.1]: The user is able to find the location of all available cars within a certain range from a specified address.


		[R2.1]: The "Reserve a car" function can be accessed by the user from the home page of the app
		[R2.2]: The "Reserve a car" function allows the user to select a range (distance)
		[R2.3]: The system acquires the user's current position through the GPS coordinates of the user's phone
		[R2.4]: The system tracks all available cars' current position through their GPS coordinates 
		[R2.4.1]: The cars must posses a device which can be tracked via GPS
		[R2.5]: The "Reserve a car" function allows the user to select a starting position for the search, which can be either their current location or a given address
		[R2.6]: When the user confirms the inserted parameters the search is carried out and the "Reserve a car" function displays to the user the data of the search acquired from the system in a Google provided map

		NOTE: here we chose not to detail the interaction between the app and the system, to avoid talking about any architectural detail 

		Domain assumptions that ensure the desired outcome:

		[D3.0]: The GPS coordinates of the cars received by the system always correspond to the actual positions of the cars.
		[D3.1]: The GPS coordinates of a user received by the system always correspond to the actual position of the user.


	[G3.0]: The user is able to pick a car among the available ones and reserve it.

	NOTE: this goal is interpreted as: if there are available cars the user can pick any one among them and reserve it, so it does not guarantee anything regarding the presence of available cars. Moreover the availability of the selected car needs to persist until the moment the user confirms the reservation of a car or interrupts the procedure for it to be considered an available car in this instance

		[R3.1]: The app allows the user to tap on any available car on the map displayed as the result of a search conducted through the "Reserve a car" function
		[R3.2]: When a user taps on a car the app generates a pop-up asking the user if he/she wants to confirm the reservation
		[R3.3]: As long as the car was not reserved by another user in the meantime, when the user confirms the car is marked as reserved by the system and the user can see the "Reservation successful!" message on the app

	[G3.1]: A reserved car is not available for renting until one hour has passed from the moment a user reserved it.
	
	[G3.2]: After one hour from its reservation, a car becomes available again (NO LONGER IN USE)

	RATIONALE: G3.2 is formulated in a way which does not completely reflect the desired outcome, since a car is not meant to be available for renting even if an hour has passed from the moment it was reserved if it is currently in use, it has been left with less than 20% battery or it is more than 3km away from the nearest power grid, and therefore it has been substituted with the following goal

	[G3.2] A car becomes available again after one hour has passed from its reservation and it is parked in a safe area less than 3 km away from a power grid having more than 20% of its battery 


		[R3.1]: When the system marks a car as reserved any reservation request from any user is rejected by the system while the car is in the reserved state
		[R3.2]: A car is in reserved state for one hour from the moment it was marked as reserved
		[R3.3]: A car in reserved state is not signaled by the system during the "Reserve a car" procedure
		[R3.4]: After one hour from it's reservation a car is no longer in reserved state
		[R3.5]: A car not in reserved state is considered available by the system only if it is parked in a safe area less than 3 km away from a power grid station and has more than 20% of its battery

	[G4]: The user pays 1 EUR if he/she doesn't reach the car he/she rent within 1 hour from the reservation.

	NOTE: "reach" in this case means that the user has ignited the car the car. This is to prevents the user from avoiding the fee by just opening the car, discouraging negative behvior 

		[R4.1]: One hour after a car has been reserved if it was never opened the system charges for 1 EUR the user who reserved it 

	[G5]: The user is able to unlock and open the car he/she rent when he/she is nearby the car

		[R5.1]: From the home page of the app the user can access the "My reservations" section
		[R5.2]: In the "My reservations" section if the user has reserved a car less than an hour ago an active reservation is displayed with an "Unlock" button 
		[R5.3]: If the user is less than 2 meters away from the car and presses the unlock button the car unlocks

	NOTE: a user is a logged in person, therefore he/she is identified by the system through an account and a GPS position. Whether the physical person who opens the car is the same who reserved it is not our concern.

	[G6]: From the moment of ignition, the user is charged for a constant amount of money per minute
	[G7.0]: The charging of the user stops as soon as the driver parks the car in a safe area and exits from it.

	NOTE: G7 is interpreted as: if the car is parked in a safe area and the driver and all the passengers exit from it, the user stops being charged (as a simple implication)

		[R6.1]: When a car is ignited the system starts charging the last user who reserved the car
		[R7.1]: When a car is stopped and the sensors in the car detect no one inside, if a user was being charged for the car the system stops charging him/her. 

		NOTE: in R7.1 we mean as soon as both conditions are met, the user stops being charged

	[G7.1]: The car is automatically locked as soon as the driver parks the car in a safe area and exits from it. 

		[R7.2]: One minute after a car has been stopped and the sensors in the car detect no one inside, the system locks the car

	Domain assumption to ensure the goals G7.0,G7.1

		[D7.1]: If the sensors in the car detect no one inside, there are no people in the car  
		
	[G8]: A discount of 10% is applied on the last ride if the driver took at least two  passengers onto the car and no higher discount or any extra fee can be applied.

		[R8]: The moment the car is stopped, if the sensor in the car detected two passengers the system records it as a possible discount of 10%
		[R12]: After two minutes since the car has been stopped and its sensors detected no one  was inside, the system applies all the extra fees and if there are none it applies the highest discount among the possible ones to the cost of the ride

	Domain assumptions that ensure the desired outcome:
	
		[D7.0]: If the sensors in the car detect other passengers, human passengers are on board
		[D7.1]: If the sensors in the car detect no one inside, there are no people in the car

	[G9]: If a car is left with more than 50% of its maximum battery available, a discount of 20% is applied on the last ride and no higher discount or any extra fee can be applied.

		[R9]: The moment the car is stopped and the sensors in the car detect no one inside, if the car has more than 50% of its maximum battery the system records it as a possible discount of 20%
		[R12]: After two minutes since the car has been stopped and its sensors detected no one  was inside, the system applies all the extra fees and if there are none it applies the highest discount among the possible ones to the cost of the ride 

	[G10]: A discount of 30% is applied on the last ride if a car is left at special parking areas where they can be recharged and the driver takes care of  plugging the car into the power grid and no higher discount or any extra fee can be applied.

		[R10]: If before 2 minutes since the moment the car has been stopped and its sensors detected no one  was inside the car is plugged in a power grid and its position is within a special parking area, the system records it as a possible discount of 30%
		[R12]: After two minutes since the car has been stopped and its sensors detected no one  was inside, the system applies all the extra fees and if there are none it applies the highest discount among the possible ones to the cost of the ride

	Domain assumption that ensures the desired outcome:

		[D3.0]: The GPS coordinates of the cars received by the system always correspond to the actual positions of the cars.

	[G11.0]: If a car is left at more than 3 kilometers from the nearest power grid station, the user is charged for an extra corresponding to 30% of the amount charged for the last ride.
	
		[R11.0]: The moment the car is stopped and the sensors in the car detect no one inside, if the safe area nearest to the car is more than 3km away from it, the system records an extra fee of 30%
		[R12]: After two minutes since the car has been stopped and its sensors detected no one  was inside, the system applies all the extra fees and if there are none it applies the highest discount among the possible ones to the cost of the ride

	Domain assumptions that ensure the desired outcome:

		[D3.0]: The GPS coordinates of the cars received by the system always correspond to the actual positions of the cars.

	[G11.1]: If a car is left with less than 20% of its maximum battery available, the user is charged for an extra corresponding to 30% of the amount charged for the last ride.

		[R11.1]: The moment the car is stopped and the sensors in the car detect no one inside, if the car has less than 20% of its maximum battery, the system records an extra fee of 30%
		[R12]: After two minutes since the car has been stopped and its sensors detected no one  was inside, the system applies all the extra fees and if there are none it applies the highest discount among the possible ones to the cost of the ride

	ADDITIONAL GOALS EMERGED THROUGH SCENARIO ANALYSIS

	[GA4]: If the user has not paid for his/her last ride, the user cannot reserve a car

		[RA4]: If a user with a pending payment procedure tries to reserve a car, a pop-up lets the user know that he/she needs to pay for his/her last ride to be able to reserve a car and the app does not allow the user complete the reservation procedure

	[GA5]: If the user's identity card or credit card has expired, he/she cannot reserve a car 

		[RA4]: If in the user's profile either the credit card or identity card expiration date has already passed, when the user tries to reserve a car a pop-up lets him/her know that the data in the user's profile need to be updated and the app prevents the reservation procedure from being completed

	[GA6]: The user is able to update expired credit card or identity card data

		[RA6.1]: From the home page of the app the user can access the "My profile" section
		[RA6.2]: From the "My profile" section the user can use the "Edit profile" button to modify his/her credential and payment info
		[RA6.3]: The system can check via the external payment service wether the payment info inserted are valid
		[RA6.4]: If the inserted payment info are valid the user can save the changes by tapping the "Confirm" button

	Domain assumptions that ensure the desired outcome:

		[D1.1]: The credentials provided by the user while editing his/her profile are always correct.
		[D1.2]: The validity check for the payment info delegated to the external payment service is always correct.

	[GA7]: The user can reserve just one car at a time

		[RA7]: If the user has aready a reservation which is not expired yet when he/she tries to reserve a car, a pop-up lets the user know that he/she needs to pay for his/her last ride to be able to reserve a car and the app does not allow the user complete the reservation procedure

	[GA8]: If the user parks the car outside of a safe area he/she is charged for a set extra fee

		[RA8]: When a car is locked the system checks its GPS coordinates, and if they correspond to those of a non safe area the last user who reserved the car is charged for a set extra fee


During requirements elicitation, we identified the need to specify some additional goals for the part of the system used by the employees, the resulting set of additional functional requirements for the system

- Employee

	[G12]: An employee is notified if a car is parked in a non safe area

	[G13]: An employee is able find the position of the car to retrieve

	[G14]: The employee is able to announce that he/she will retrieve a specific car

	[G15]: The employee is able to open any car he/she needs to retrieve

	[G16]: The employee is never charged for retrieving a car

















NON FUNCTIONAL REQUIREMENTS


The car is able to communicate with the system at all times.
//TODO availability of service

FUNCTIONAL REQUIREMENTS
//TODO expand/formalize requirements
System can detect discount conditions.
The car can communicate the exact level of its battery to the system.
In the car the driver can see the position of safe areas and power grid available
(maybe through the app? Place to rcharge + place the phone? )

// possible requirement
The company can remove non-operational cars from the system if necessary.

If a user did not pay for the last ride, cannot reserve a car.
If a user drives a car to battery exhaustion or leaves it outside of a safe area, an extra fee is applied.
A car either parked or dislocated is automatically locked by the system after 1 minute.
If the user has an expired credit card/ identity card, he/she cannot reserve a car.